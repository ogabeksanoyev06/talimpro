import{X as k,u as A,r as u,n as I,Y as R}from"./CpzEDSKg.js";import{p as n}from"./Be3E_yng.js";import{t as r}from"./D4tZ26va.js";import{u as O}from"./vlyNUNmt.js";const S=window.setInterval,x=k("active-test",()=>{const d=O(),{$toast:_}=R(),w=A(),p=u(0),T=I("testResult"),m=u(!1),o=u({}),v=u(!1),i=u(null),g=u(),E=async()=>{try{const e=await d.post("tests/update-tests/");console.log(e)}catch(e){console.log(e)}},h=(e,a,s)=>e.map(t=>({id:t.id,question:n(t.question),answers:[n(t.answer1),n(t.answer2),n(t.answer3),n(t.answer4)],is_correct:t.is_correct,is_picked:t.is_picked,answer:t.answer})),b=(e,a)=>{const s=e.name||"",t=e.time_interval.id,c=e.test_type_id||null,l=h(e.questions);o.value={subjectName:s,type:a,testId:t,testTypeId:c,questions:l}},Y=e=>{o.value={type:e.type,testId:e.time_interval.id,questions:e.questions.flatMap(a=>a.test_results.map(s=>{var c;const t=((c=a.dtmtest_blog)==null?void 0:c.type)==="compulsory"?`${a.science} (majburiy fan)`:a.science;return{dtmtest_blog:a.dtmtest_blog,id:s.id,question:n(s.question),answers:[n(s.answer1),n(s.answer2),n(s.answer3),n(s.answer4)],is_correct:s.is_correct,is_picked:s.is_picked,answer:s.answer,science:t}}).sort((s,t)=>s.dtmtest_blog-t.dtmtest_blog))}},P=async()=>{i.value&&clearInterval(i.value),i.value=S(async()=>{p.value<=2?(f(),clearInterval(i.value)):p.value--},1e3)},f=async()=>{var s,t,c;const e={[r.TYPE_DTM]:"tests/dtmtest/done/",[r.TYPE_BLOG]:"tests/blogtest/done/",[r.TYPE_SCHOOL]:"tests/schooltest/done/",[r.TYPE_RESEARCH]:"tests/researchtest/done/"}[(s=o.value)==null?void 0:s.type];if(!e){console.error("Unknown test type");return}const a={question_id:null,total_result_id:o.value.testId,answer:null,picked:null,finishing:!0,...((t=o.value)==null?void 0:t.type)===r.TYPE_RESEARCH&&{test_type_id:(c=o.value)==null?void 0:c.testTypeId}};try{const l=await d.post(e,a);T.value=l.result,clearInterval(i.value),p.value=0,w.push("/test-result")}catch(l){console.log(l.response)}};return{loading:m,tests:o,hasActiveTest:v,testResult:T,testTimer:p,setTimer:P,testFinish:f,selectAnswer:async(e,a,s)=>{const t={[r.TYPE_DTM]:"tests/dtmtest/done/",[r.TYPE_BLOG]:"tests/blogtest/done/",[r.TYPE_SCHOOL]:"tests/schooltest/done/",[r.TYPE_RESEARCH]:"tests/researchtest/done/"}[o.value.type];if(!t){console.error("Unknown test type");return}const c={question_id:Number(e),total_result_id:o.value.testId,answer:a,picked:!0,finishing:!1,...o.value.type===r.TYPE_DTM&&{blog_id:s.id}};try{const l=await d.post(t,c);_.success(l.message),o.value.questions.forEach(y=>{y.id===e&&(y.is_picked=!0,y.answer=a)})}catch(l){_.error(l.response.data.message)}},getTestLiveTime:async()=>{var e,a,s;try{const t=await d.post("tests/get-test-live-time/",{test_type:(e=o.value)==null?void 0:e.type,test_id:(a=o.value)==null?void 0:a.testId});t.code===200&&(_.success(t.message),p.value=(s=t==null?void 0:t.data)==null?void 0:s.left_time.toFixed(0))}catch(t){_.error(t.response.data.message)}},getActiveTest:async()=>{m.value=!0;try{const e=await d.get("tests/active-tests/");switch(g.value=e,e.type){case r.TYPE_BLOG:case r.TYPE_SCHOOL:case r.TYPE_RESEARCH:b(e,e.type),v.value=!0;break;case r.TYPE_DTM:Y(e),v.value=!0;break;default:v.value=!1;break}}catch{v.value=!1}finally{m.value=!1}},updateTests:E,timerInterval:i}});export{x as u};
